<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.adrosonic.adroscanner"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="28" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />

    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.DOWNLOAD_WITHOUT_NOTIFICATION" /> <!-- TODO: Remove the -sdk-23 tag when the minsdk version is 23 -->
    <uses-permission-sdk-23 android:name="android.permission.USE_FINGERPRINT" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <application
        android:name="com.adrosonic.adroscanner.App"
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:fullBackupContent="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:testOnly="true"
        android:theme="@style/AppTheme" >
        <meta-data
            android:name="com.google.firebase.ml.vision.DEPENDENCIES"
            android:value="ocr" />

        <activity android:name="com.adrosonic.adroscanner.modules.login.MainActivity" >
        </activity>
        <activity android:name="com.adrosonic.adroscanner.modules.register.RegisterActivity" />
        <activity android:name="com.adrosonic.adroscanner.modules.landing.LandingActivity" />
        <activity
            android:name="com.adrosonic.adroscanner.modules.camera.CameraActivity"
            android:screenOrientation="portrait" />
        <activity android:name="com.adrosonic.adroscanner.modules.result.ResultActivity" />
        <activity android:name="com.adrosonic.adroscanner.modules.login.LoginActivity" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.google.firebase.auth.internal.FederatedSignInActivity"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleTask"
            android:permission="com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <!--
             FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.adrosonic.adroscanner.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" /> <!-- Metadata for supported app restrictions -->
        <meta-data
            android:name="android.content.APP_RESTRICTIONS"
            android:resource="@xml/app_restrictions" /> <!-- Service required for authentication -->
        <service
            android:name="com.salesforce.androidsdk.auth.AuthenticatorService"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service> <!-- Login activity -->
        <!--
            Launch mode of "singleInstance" ensures that the activity isn't restarted
            by a callback from Chrome custom tab when auth flow is complete. This is
            required for the Chrome custom tab auth flow to work correctly.
        -->
        <activity
            android:name="com.salesforce.androidsdk.ui.LoginActivity"
            android:launchMode="singleInstance"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Passcode activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.PasscodeActivity"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Manage space activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.ManageSpaceActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Choose server activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.ServerPickerActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Account switcher activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.AccountSwitcherActivity"
            android:excludeFromRecents="true"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- IDP webview activity -->
        <activity
            android:name="com.salesforce.androidsdk.auth.idp.IDPCodeGeneratorActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Dev info activity -->
        <activity
            android:name="com.salesforce.androidsdk.ui.DevInfoActivity"
            android:exported="false"
            android:theme="@style/SalesforceSDK.ActionBarTheme" /> <!-- Receiver for IDP initiated login flow -->
        <receiver
            android:name="com.salesforce.androidsdk.auth.idp.IDPInititatedLoginReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.salesforce.IDP_LOGIN_REQUEST" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver> <!-- Google Play Services Push Registration -->
        <!--
            Push notification services and receivers. The 'category' attribute
            here should match the <app-package-name> attribute.
        -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.adrosonic.adroscanner" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.salesforce.androidsdk.push.SFDCGcmListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>
        <service
            android:name="com.salesforce.androidsdk.push.SFDCInstanceIDListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>
        <service
            android:name="com.salesforce.androidsdk.push.SFDCRegistrationIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" >
        </service>

        <receiver
            android:name="com.salesforce.androidsdk.push.PushService$SFDCRegistrationRetryAlarmReceiver"
            android:exported="false" />

        <service
            android:name="com.salesforce.androidsdk.push.PushService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />
        <service
            android:name="com.salesforce.androidsdk.analytics.AnalyticsPublisherService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="com.android.tools.ir.server.InstantRunContentProvider"
            android:authorities="com.adrosonic.adroscanner.com.android.tools.ir.server.InstantRunContentProvider"
            android:multiprocess="true" />
    </application>

</manifest>